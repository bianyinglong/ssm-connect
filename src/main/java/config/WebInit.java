package config;import org.springframework.web.filter.CharacterEncodingFilter;import org.springframework.web.filter.FormContentFilter;import org.springframework.web.filter.HiddenHttpMethodFilter;import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;import javax.servlet.Filter;// 注解配置，替代web.xml配置文件public class WebInit extends AbstractAnnotationConfigDispatcherServletInitializer {    /**     * 指定spring的配置类     * @return     */    @Override    protected Class<?>[] getRootConfigClasses() {        return new Class[]{SpringConfig.class};    }    /**     * 指定springMVC的配置类     * @return     */    @Override    protected Class<?>[] getServletConfigClasses() {        return new Class[]{SpringMvcConfig.class};    }    /**     * 指定DispatcherServlet的映射规则，即url-pattern     * @return     */    @Override    protected String[] getServletMappings() {        return new String[]{"/"};    }    /**     * 注册过滤器，设置请求和响应编码     * @return     */    @Override    protected Filter[] getServletFilters() {        CharacterEncodingFilter characterEncodingFilter = new CharacterEncodingFilter();        characterEncodingFilter.setEncoding("UTF-8");        characterEncodingFilter.setForceResponseEncoding(true);        // 将普通的请求转换为指定的delete或put请求（）        HiddenHttpMethodFilter hiddenHttpMethodFilter = new HiddenHttpMethodFilter();        // 解决直接使用put请求属性与数据库表的列属性不匹配问题        FormContentFilter formContentFilter = new FormContentFilter();        return new Filter[]{characterEncodingFilter, hiddenHttpMethodFilter, formContentFilter};    }}